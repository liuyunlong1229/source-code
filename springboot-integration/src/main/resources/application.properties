server.port=8081
server.context-path=/springboot-integration

## 数据源配置
spring.datasource.url=jdbc:mysql://192.168.58.1:3306/springbootdb?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

## Mybatis 配置
mybatis.typeAliasesPackage=org.springboot.integration.entity
mybatis.mapperLocations=classpath:META-INF/mapper/*.xml




debug=true
#logging.level.root=WARN
logging.level.or=debug

# 设置日志打印的级别，如果需要mybatis包下的为debug，以便显示加载的Mapper.xml文件
logging.level.org.mybatis=DEBUG



## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=127.0.0.1
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=test123
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=0


#spring.redis.cluster.nodes: 192.168.204.129:7001,192.168.204.129:7002,192.168.204.129:7003,192.168.204.129:7004,192.168.204.129:7005,192.168.204.129:7006
#spring.redis.cluster.max-redirects: 5


spring.thymeleaf.cache=false
#需要设置cglib代理，要不然conroller中的自定义的注解token，在在aop中拦截针对该注解进行拦截,不生效。
spring.aop.proxy-target-class=true 
